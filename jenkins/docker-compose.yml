version: '3.8'

services:
  jenkins:
    build:
      context: .
      dockerfile: Dockerfile
    ports:
      - "8080:8080"
      - "50000:50000"
    volumes:
      - jenkins_home:/var/jenkins_home
      - /var/run/docker.sock:/var/run/docker.sock
    # Adds host docker group to container if needed
    group_add:
      - ${DOCKER_GROUP_ID:-0}
    env_file:
      - .env
    networks:
      - dev-net

  sonarqube:
    image: sonarqube:lts-developer
    ports:
      - "9000:9000"
    environment:
      - SONARQUBE_JDBC_USERNAME=sonar
      - SONARQUBE_JDBC_PASSWORD=sonar
      - SONARQUBE_JDBC_URL=jdbc:postgresql://db:5432/sonar
    networks:
      - dev-net

  db:
    image: postgres:13
    environment:
      - POSTGRES_USER=sonar
      - POSTGRES_PASSWORD=sonar
      - POSTGRES_DB=sonar
    volumes:
      - sonar_data:/var/lib/postgresql/data
    networks:
      - dev-net
      
  zap:
    image: zaproxy/zap-stable
    ports:
      - "9888:8080"
      - "9889:8090"
    command: zap.sh -daemon -host 0.0.0.0 -port 8080 -config api.disablekey=true -config api.addrs.addr.name=.* -config api.addrs.addr.regex=true
    networks:
      - dev-net
      
volumes:
  jenkins_home:
  sonar_data:

networks:
  dev-net: